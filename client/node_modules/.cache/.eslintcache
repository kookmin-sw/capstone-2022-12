[{"C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\index.js":"1","C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\App.js":"2","C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\reportWebVitals.js":"3","C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\SignInPage.js":"4","C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\SelectSignUp.js":"5","C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\UserSignUp.js":"6","C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\ManagerSignUp.js":"7","C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\SignIn.js":"8","C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\store.js":"9","C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\Dashboard.js":"10","C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\Emotion.js":"11","C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\listItems.js":"12","C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\Orders.js":"13","C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\UserInfo.js":"14","C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\Title.js":"15","C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\index.js":"16","C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\reportWebVitals.js":"17","C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\App.js":"18","C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\SignInPage.js":"19","C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\components\\SelectSignUp.js":"20","C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\components\\Dashboard.js":"21","C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\components\\ManagerSignUp.js":"22","C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\components\\UserSignUp.js":"23","C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\components\\SignIn.js":"24","C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\components\\Emotion.js":"25","C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\components\\Title.js":"26","C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\components\\Orders.js":"27","C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\components\\AddUserPopup.js":"28"},{"size":742,"mtime":1652403712000,"results":"29","hashOfConfig":"30"},{"size":929,"mtime":1652418231458,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1652403712000,"results":"32","hashOfConfig":"30"},{"size":1260,"mtime":1652418229673,"results":"33","hashOfConfig":"30"},{"size":1854,"mtime":1652403712000,"results":"34","hashOfConfig":"30"},{"size":6232,"mtime":1652416712049,"results":"35","hashOfConfig":"30"},{"size":8534,"mtime":1652418233372,"results":"36","hashOfConfig":"30"},{"size":4459,"mtime":1652428529180,"results":"37","hashOfConfig":"30"},{"size":102,"mtime":1652403712000,"results":"38","hashOfConfig":"30"},{"size":8100,"mtime":1652429847397,"results":"39","hashOfConfig":"30"},{"size":2216,"mtime":1652429867632,"results":"40","hashOfConfig":"30"},{"size":1525,"mtime":1652403712000,"results":"41","hashOfConfig":"30"},{"size":2440,"mtime":1652403712000,"results":"42","hashOfConfig":"30"},{"size":1470,"mtime":1652424330205,"results":"43","hashOfConfig":"30"},{"size":371,"mtime":1652403712000,"results":"44","hashOfConfig":"30"},{"size":398,"mtime":1652879905000,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":1652879905000,"results":"47","hashOfConfig":"46"},{"size":929,"mtime":1652879905000,"results":"48","hashOfConfig":"46"},{"size":1232,"mtime":1652879905000,"results":"49","hashOfConfig":"46"},{"size":1854,"mtime":1652879905000,"results":"50","hashOfConfig":"46"},{"size":8781,"mtime":1652943028691,"results":"51","hashOfConfig":"46"},{"size":8776,"mtime":1652931881462,"results":"52","hashOfConfig":"46"},{"size":6488,"mtime":1652931912276,"results":"53","hashOfConfig":"46"},{"size":5222,"mtime":1652932548972,"results":"54","hashOfConfig":"46"},{"size":2118,"mtime":1652879905000,"results":"55","hashOfConfig":"46"},{"size":371,"mtime":1652879905000,"results":"56","hashOfConfig":"46"},{"size":1372,"mtime":1652943832547,"results":"57","hashOfConfig":"46"},{"size":2236,"mtime":1652940596975,"results":"58","hashOfConfig":"46"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oo4wht",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18a1211",{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},"C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\index.js",[],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\App.js",[],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\SignInPage.js",[],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\SelectSignUp.js",[],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\UserSignUp.js",["151"],[],"import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\nimport {Link as RouterLink} from \"react-router-dom\";\nimport axios from 'axios'\n\nconst theme = createTheme();\n\nexport default function UserSignUp(props) {\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const data = new FormData(event.currentTarget);\n        const body = {\n            check: 'user',\n            serial: data.get('serial'),\n            u_id: data.get('u_id'),\n            u_pw: data.get('u_pw'),\n            u_name: data.get('u_name'),\n            u_age: data.get('u_age'),\n            u_address: data.get(\"u_address\"),\n            u_number: data.get(\"u_number\")\n        }\n\n        axios.post('/register', body)\n            .then(response => {\n                const token = response.data;\n                console.log(\"access!\");\n            });\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline/>\n                <Box\n                    sx={{\n                        marginTop: 8,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                    }}\n                >\n                    <Avatar sx={{m: 1, bgcolor: 'secondary.main'}}>\n                        <LockOutlinedIcon/>\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        사용자 회원가입\n                    </Typography>\n                    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{mt: 3}}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    id=\"u_id\"\n                                    label=\"아이디\"\n                                    name=\"u_id\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    name=\"u_pw\"\n                                    label=\"비밀번호\"\n                                    type=\"password\"\n                                    id=\"u_pw\"\n                                    autoComplete=\"new-password\"\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    autoComplete=\"given-name\"\n                                    name=\"u_name\"\n                                    required\n                                    fullWidth\n                                    id=\"u_name\"\n                                    label=\"이름\"\n                                    autoFocus\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    id=\"u_age\"\n                                    label=\"나이\"\n                                    name=\"u_age\"\n                                    autoComplete=\"age\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    id=\"u_address\"\n                                    label=\"전화번호\"\n                                    name=\"u_address\"\n                                    autoComplete=\"tel\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    id=\"u_number\"\n                                    label=\"사용자 주소\"\n                                    name=\"u_number\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    id=\"serial\"\n                                    label=\"제품 시리얼 번호\"\n                                    name=\"serial\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{mt: 3, mb: 2}}\n                        >\n                            회원가입\n                        </Button>\n                        <Grid container justifyContent=\"flex-end\">\n                            <Grid item>\n                                <Link component={RouterLink} to=\"/signin\" variant=\"body2\">\n                                    이미 계정이 있으신가요? 로그인하세요\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>\n            </Container>\n        </ThemeProvider>\n    );\n}","C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\ManagerSignUp.js",["152"],[],"import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\nimport {FormControl, InputLabel, MenuItem, Select} from \"@mui/material\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport axios from 'axios';\n\nconst theme = createTheme();\n\nexport default function ManagerSignUp(props) {\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const data = new FormData(event.currentTarget);\n        const body = {\n            check: 'manager',\n            serial: data.get('serial'),\n            m_u_id: data.get('m_u_id'),\n            m_u_pw: data.get('m_u_pw'),\n            m_id: data.get('m_id'),\n            m_pw: data.get('m_pw'),\n            m_name: data.get('m_name'),\n            m_relation: data.get('m_relation'),\n            m_email: data.get('m_email'),\n            m_number: data.get('m_number'),\n        \n        }\n\n        axios.post('/register', body)\n            .then(response => {\n                const token = response.data;\n                console.log(\"access!\");\n            });\n    };\n\n    const [relation, setRelation] = React.useState('가족');\n\n    const handleChange = (event) => {\n        setRelation(event.target.value);\n    };\n\n    return (\n            <ThemeProvider theme={theme}>\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline/>\n                    <Box\n                        sx={{\n                            marginTop: 8,\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Avatar sx={{m: 1, bgcolor: 'secondary.main'}}>\n                            <LockOutlinedIcon/>\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            보호자 회원가입\n                        </Typography>\n                        <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{mt: 3}}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        id=\"m_id\"\n                                        label=\"보호자 아이디\"\n                                        name=\"m_id\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        name=\"m_pw\"\n                                        label=\"보호자 비밀번호\"\n                                        type=\"password\"\n                                        id=\"m_pw\"\n                                        autoComplete=\"new-password\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        autoComplete=\"name\"\n                                        name=\"m_name\"\n                                        required\n                                        fullWidth\n                                        id=\"m_name\"\n                                        label=\"보호자 이름\"\n                                        autoFocus\n                                    />\n                                </Grid>\n                                <Grid item xs={12} display={'flex'} justifyContent={'flex-start'}>\n                                    <FormControl fullWidth>\n                                        <InputLabel id=\"relation\">사용자와의 관계</InputLabel>\n                                        <Select\n                                            labelId=\"relation\"\n                                            id=\"m_relation\"\n                                            value={relation}\n                                            label=\"사용자와의 관계\"\n                                            onChange={handleChange}\n                                            sx={{}}\n                                        >\n                                            <MenuItem value={'가족'}>가족</MenuItem>\n                                            <MenuItem value={'기관'}>기관</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        id=\"m_email\"\n                                        label=\"보호자 이메일\"\n                                        name=\"m_email\"\n                                        autoComplete=\"email\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        id=\"m_number\"\n                                        label=\"보호자 전화번호\"\n                                        name=\"m_number\"\n                                        autoComplete=\"tel\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        id=\"serial\"\n                                        label=\"제품 번호\"\n                                        name=\"serial\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        id=\"m_u_id\"\n                                        label=\"사용자 아이디\"\n                                        name=\"m_u_id\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        id=\"m_u_pw\"\n                                        label=\"사용자 비밀번호\"\n                                        name=\"m_u_pw\"\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                sx={{mt: 3, mb: 2}}\n                            >\n                                회원가입\n                            </Button>\n                            <Grid container justifyContent=\"flex-end\">\n                                <Grid item>\n                                    <Link component={RouterLink} to=\"/signin\" variant=\"body2\">\n                                        이미 계정이 있으신가요? 로그인하세요\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </Box>\n\n                    </Box>\n                </Container>\n            </ThemeProvider>\n    );\n}","C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\SignIn.js",[],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\store.js",[],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\Dashboard.js",["153","154","155","156","157","158"],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\Emotion.js",["159"],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\listItems.js",[],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\Orders.js",["160","161"],[],"import * as React from 'react';\nimport Link from '@mui/material/Link';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(id, date, lastSpeak, lastListen, result) {\n    return {id, date, lastSpeak, lastListen, result};\n}\n\nconst rows = [\n    createData(\n        0,\n        '2022-05-01',\n        '안녕',\n        '안녕하세요',\n        '우울하지 않음'\n    ),\n    createData(\n        1,\n        '2022-05-01',\n        '만나서 반갑구나',\n        '저도 만나서 반가워요',\n        '우울하지 않음'\n    ),\n    createData(\n        2,\n        '2022-05-01',\n        '나랑 말해주는 건 너 밖에 없네',\n        '많이 외로우시군요',\n        '우울'\n    ),\n    createData(\n        3,\n        '2022-05-01',\n        '그래도 너라도 있어서 다행이야',\n        '정말 감사합니다',\n        '우울하지 않음'\n    ),\n    createData(\n        4,\n        '2022-05-01',\n        '오늘은 어떤 일을 하면 좋을까',\n        '일기를 써 보는 것을 어떨까요',\n        '우울하지 않음'\n    ),\n];\n\nfunction preventDefault(event) {\n    event.preventDefault();\n}\n\nexport default function Orders() {\n    return (\n        <React.Fragment>\n            <Title>최근 대화 내역</Title>\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>시간</TableCell>\n                        <TableCell>마지막으로 말한 말</TableCell>\n                        <TableCell>마지막으로 들은 말</TableCell>\n                        <TableCell>분류 결과</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map((row) => (\n                        <TableRow key={row.id}>\n                            <TableCell>{row.date}</TableCell>\n                            <TableCell>{row.lastSpeak}</TableCell>\n                            <TableCell>{row.lastListen}</TableCell>\n                            <TableCell>{row.result}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </React.Fragment>\n    );\n}","C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\UserInfo.js",["162","163"],[],"import * as React from 'react';\nimport {useTheme} from '@mui/material/styles';\nimport Title from './Title';\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nexport default function UserInfo(props) {\n    const theme = useTheme();\n    const userName = props.name;\n    return (\n        <React.Fragment>\n            <Title>{userName}님의 보호자</Title>\n            <Grid container alignItems={'center'} display={'flex'} spacing={6}>\n                <Grid item xs={12} md={6}>\n                    <Typography variant={'h5'} color={'primary'}>황교민</Typography>\n                    <Typography>이메일: tempmail1@gmail.com</Typography>\n                    <Typography>연락처: 010-1111-1111</Typography>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <Typography variant={'h5'} color={'primary'}>장민혁</Typography>\n                    <Typography>이메일: tempmail2@gmail.com</Typography>\n                    <Typography>연락처: 010-2222-2222</Typography>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <Typography variant={'h5'} color={'primary'}>조상연</Typography>\n                    <Typography>이메일: tempmail3@gmail.com</Typography>\n                    <Typography>연락처: 010-3333-3333</Typography>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}","C:\\Users\\82109\\캡스톤\\server_heroku\\capstone_git\\capstone-2022-12\\client\\src\\components\\Title.js",[],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\index.js",[],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\App.js",[],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\SignInPage.js",[],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\components\\SelectSignUp.js",[],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\components\\Dashboard.js",["164","165","166"],[],"import * as React from 'react';\nimport {useEffect, useState} from 'react';\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport AddIcon from '@mui/icons-material/Add';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Emotion from './Emotion';\nimport Orders from './Orders';\nimport {useLocation} from 'react-router';\nimport Avatar from \"@mui/material/Avatar\";\nimport Title from \"./Title\";\nimport {Fab, Popover, Radio, RadioGroup, Zoom} from \"@mui/material\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport axios from \"axios\";\nimport AddUserPopup from \"./AddUserPopup\";\n\nconst mdTheme = createTheme();\n\nfunction DashboardContent() {\n    const location = useLocation();\n    console.log(\"dashboard information from server\");\n    console.log(location.state);\n\n    const userType = location.state.userType;\n    const currentId = location.state.currentId;\n    const userSerials = location.state.userSerials;\n    const userNames = location.state.userNames;\n    const userTels = location.state.userTels;\n\n    const [userInfo, setUserInfo] = useState(\n        {\n            lastTimes: [],\n            lastEmotions: [],\n            lastTexts: [],\n            userStatus: {\n                depressed: 0,\n                notDepressed: 0\n            }\n        }\n    );\n\n    const [userIdx, setUserIdx] = useState(userType === 'user'? 0 : -1);\n\n\n    useEffect(async () => {\n        const body = {\n            userType: userType,\n            serial: userSerials[userIdx],\n        }\n\n        if (userIdx === -1) {\n            return;\n        }\n\n        console.log(`request user serial ${body.serial} to server`);\n        console.log(body);\n        await axios.post(\"/info\", body).then(\n            response => {\n                console.log(`received ${userSerials[userIdx]} info from server`);\n                console.log(response.data);\n                setUserInfo({\n                        lastTimes: response.data.lastTime,\n                        lastEmotions: response.data.lastEmotion,\n                        lastTexts: response.data.lastText,\n                        userStatus: response.data.userStatus\n                    }\n                )\n            }\n        )\n    }, [userIdx]);\n\n\n    const handleSelect = (e) => {\n        setUserIdx(e.currentTarget.value);\n    }\n\n    const [anchorEl, setAnchorEl] = React.useState(false);\n    const open = Boolean(anchorEl);\n    const floatId = anchorEl ? 'addUser' : undefined;\n    const handleFabClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleFapClose = () => {\n        setAnchorEl(null);\n    };\n\n    const renderViaType = () => {\n        if (userType === \"manager\") {\n            return (\n                <Grid item xs={12} md={6}>\n                    <Paper\n                        sx={{\n                            p: 2,\n                            display: 'flex',\n                            flexDirection: 'column',\n                        }}>\n                        <Box>\n                            <Title>사용자 선택</Title>\n                            <RadioGroup onChange={handleSelect}>\n                                {userNames.map((name, idx) => (\n                                    <FormControlLabel\n                                        key={`userRadio${idx}`}\n                                        value={idx}\n                                        label={name}\n                                        control={<Radio/>}/>))\n                                }\n                            </RadioGroup>\n                            <Fab color={'primary'} aria-label={floatId} variant={'extended'}\n                                 aria-describedby={floatId}\n                                 onClick={handleFabClick}\n                            >\n                                <AddIcon/>\n                                사용자 추가하기\n                            </Fab>\n                            <Popover\n                                id={floatId}\n                                open={open}\n                                anchorEl={anchorEl}\n                                onClose={handleFapClose}\n                                anchorOrigin={{\n                                    vertical: 'bottom',\n                                    horizontal: 'center',\n                                }}\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'center',\n                                }}\n                            >\n                                <AddUserPopup currentId={currentId}/>\n                            </Popover>\n                        </Box>\n                    </Paper>\n                </Grid>\n            );\n        }\n    }\n\n    return (\n        <ThemeProvider theme={mdTheme}>\n            <Box sx={{display: 'block'}}>\n                <CssBaseline/>\n                <Box\n                    component=\"main\"\n                    sx={{\n                        backgroundColor: (theme) =>\n                            theme.palette.mode === 'light'\n                                ? theme.palette.grey[100]\n                                : theme.palette.grey[900],\n                        flexGrow: 1,\n                        height: '100vh',\n                        overflow: 'auto',\n                    }}\n                >\n                    <Toolbar/>\n                    <Container maxWidth=\"lg\" sx={{mt: 4, mb: 4}}>\n                        <Grid container spacing={3} alignItems={'stretch'} justifyContent={'ceneter'}>\n                            <Grid item xs={12} display={'block'}>\n                                <Paper\n                                    sx={{\n                                        p: 2,\n                                        display: 'flex',\n                                        flexDirection: 'column',\n                                        justifyContent: 'center',\n                                        alignItems: 'center'\n                                    }}\n                                >\n                                    <Avatar\n                                        sx={{width: '12vh', height: '12vh'}}\n                                        src={'pic.jpg'}\n                                    />\n                                    <Typography\n                                        variant={'h4'}\n                                        p={2}\n                                        fontWeight={'bold'}\n                                    >환영합니다 {currentId}님!</Typography>\n                                </Paper>\n                            </Grid>\n                            {renderViaType()}\n                            <Zoom in={userIdx !== -1}>\n                                <Grid item xs={6}>\n                                    <Paper\n                                        sx={{\n                                            p: 2,\n                                            display: 'flex',\n                                            flexDirection: 'column',\n                                            height: 260\n                                        }}\n                                    >\n                                        <Emotion\n                                            user={userNames[userIdx]}\n                                            depressed={userInfo.userStatus.depressed}\n                                            notDepressed={userInfo.userStatus.notDepressed}\n                                        />\n                                    </Paper>\n                                </Grid>\n                            </Zoom>\n                            <Grid item xs={12}>\n                                <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\n                                    <Orders\n                                        lastTimes={userInfo.lastTimes}\n                                        lastEmotions={userInfo.lastEmotions}\n                                        lastTexts={userInfo.lastTexts}\n                                    />\n                                </Paper>\n                            </Grid>\n                            {/* Recent Talk */}\n                        </Grid>\n                    </Container>\n                </Box>\n            </Box>\n        </ThemeProvider>\n    );\n}\n\nexport default function Dashboard() {\n    return <DashboardContent/>;\n}","C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\components\\ManagerSignUp.js",[],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\components\\UserSignUp.js",[],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\components\\SignIn.js",["167","168"],[],"import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Switch from '@mui/material/Switch';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\nimport {Link as RouterLink, useNavigate} from 'react-router-dom'\nimport * as axios from 'axios';\nimport {RadioGroup, Radio} from \"@mui/material\";\n\n\nconst theme = createTheme();\n\nexport default function SignIn() {\n    const navigate = useNavigate();\n    const [userType, setUserType] = React.useState('user');\n\n    const handleRadioChange = (event) => {\n        setUserType(event.currentTarget.value);\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const data = new FormData(event.currentTarget);\n        const body = {\n            userType: userType,\n            id: data.get('id'),\n            pw: data.get('pw'),\n        }\n        console.log(\"request to server with\");\n        console.log(body);\n\n        await axios.post(\"/login\", body)\n            .then(response => {\n                console.log(\"response from server with\")\n                const data = response.data;\n                console.log(data);\n                if (data.loginSuccess) {\n                    navigate(\"/dashboard\", {\n                        state: {\n                            currentId: data.id,\n                            userType: userType,\n                            userSerials: data.userSerials,\n                            userNames: data.userNames,\n                            userTels: data.userTels,\n                        }\n                    });\n                } else {\n                    alert(\"잘못된 회원 정보입니다!\");\n                }\n            });\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline/>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                    }}\n                >\n                    <Avatar sx={{m: 1, backgroundColor: 'secondary.main'}}>\n                        <LockOutlinedIcon/>\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        로그인\n                    </Typography>\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{mt: 1}}>\n                        <Box display={'flex'} width={1.0} justifyContent={'center'}>\n                            <RadioGroup\n                                row\n                                defaultValue={'user'}\n                                name={'userType'}\n                                onChange={handleRadioChange}\n                            >\n                                <FormControlLabel control={<Radio/>} label={'사용자'} value={'user'}/>\n                                <FormControlLabel control={<Radio/>} label={'보호자'} value={'manager'}/>\n                            </RadioGroup>\n                        </Box>\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"id\"\n                            label=\"아이디\"\n                            name=\"id\"\n                            autoFocus\n                        />\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"pw\"\n                            label=\"비밀번호\"\n                            type=\"password\"\n                            id=\"pw\"\n                            autoComplete=\"current-password\"\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{mt: 3, mb: 2}}\n                            onSubmit={handleSubmit}\n                        >\n                            로그인하기\n                        </Button>\n                        <Grid container justifyContent={'flex-between'}>\n                            <Grid item xs={12}>\n                                <Link component={RouterLink} to=\"/signup\" variant=\"body2\">\n                                    {\"아직 회원이 아니신가요?\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>\n            </Container>\n        </ThemeProvider>\n    );\n}","C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\components\\Emotion.js",["169"],[],"import * as React from 'react';\nimport Title from './Title';\nimport {PieChart, Pie, Cell, ResponsiveContainer, Tooltip, Legend} from \"recharts\";\n\nfunction preventDefault(event) {\n    event.preventDefault();\n}\n\nexport default function Emotion({user, depressed, notDepressed}) {\n    const data = [\n        {\n            \"name\": \"우울\",\n            \"value\": depressed,\n        },\n        {\n            \"name\": \"우울하지 않음\",\n            \"value\": notDepressed,\n        }\n    ]\n\n    const colors = [\n        \"#e57373\", \"#42a5f5\"\n    ]\n\n    const RADIAN = Math.PI / 180;\n\n\n    const renderCustomizedLabel = ({\n                                       cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n                                   }) => {\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n        const x = cx + radius * Math.cos(-midAngle * RADIAN);\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n        return (\n            <text x={x} y={y} fill=\"white\" textAnchor=\"middle\" dominantBaseline=\"central\">\n                {`${(percent * 100).toFixed(0)}%`}\n            </text>\n        );\n    }\n\n\n    return (\n        <React.Fragment>\n            <Title>{user} 님의 최근 2주간 감정 상태</Title>\n            <ResponsiveContainer>\n                <PieChart width={730} height={250}>\n                    <Pie\n                        data={data}\n                        dataKey=\"value\"\n                        nameKey=\"name\"\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        outerRadius={50}\n                        label={renderCustomizedLabel}\n                        labelLine={false}\n                    >\n                        {\n                            data.map((entry, index) => (\n                                <Cell key={`cell-${index}`} fill={colors[index]}/>\n                            ))\n                        }\n                    </Pie>\n                    <Legend/>\n                    <Tooltip/>\n                </PieChart>\n            </ResponsiveContainer>\n        </React.Fragment>\n    );\n}","C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\components\\Title.js",[],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\components\\Orders.js",[],[],"C:\\Users\\82109\\캡스톤\\server_heroku\\kookmin_aid_heroku_react\\client\\src\\components\\AddUserPopup.js",["170"],[],"import Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport * as axios from \"axios\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Title from \"./Title\";\r\n\r\nconst AddUserPopup = ({currentId}) => {\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const body = {\r\n            userType: 'manager',\r\n            u_id: data.get('userId'),\r\n            u_pw: data.get('userPw'),\r\n            serial: data.get(\"serial\"),\r\n            currentId: currentId,\r\n        }\r\n        console.log(\"request add user to server with\");\r\n        console.log(body);\r\n        await axios.post(\"/add_user\", body)\r\n            .then(response => {\r\n                if (response.data.registerSuccess) {\r\n                    alert(\"사용자 추가에 성공하였습니다\");\r\n                } else{\r\n                    alert(\"사용자 추가에 실패하였습니다. 입력된 정보를 다시 확인해주세요.\");\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            component={\"form\"}\r\n            onSubmit={handleSubmit}\r\n            noValidate\r\n            p={12}\r\n            display={'flex'}\r\n            flexDirection={'column'}\r\n        >\r\n            <TextField\r\n                margin=\"none\"\r\n                required\r\n                id=\"userId\"\r\n                label=\"사용자 아이디\"\r\n                name=\"userId\"\r\n            />\r\n            <TextField\r\n                margin=\"normal\"\r\n                required\r\n                id=\"userPw\"\r\n                label=\"사용자 비밀번호\"\r\n                name=\"userPw\"\r\n            />\r\n            <TextField\r\n                margin=\"normal\"\r\n                required\r\n                id=\"serial\"\r\n                label=\"사용자 제품번호\"\r\n                name=\"serial\"\r\n            />\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{mt: 3, mb: 2}}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                사용자 추가\r\n            </Button>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default AddUserPopup;",{"ruleId":"171","severity":1,"message":"172","line":35,"column":23,"nodeType":"173","messageId":"174","endLine":35,"endColumn":28},{"ruleId":"171","severity":1,"message":"172","line":39,"column":23,"nodeType":"173","messageId":"174","endLine":39,"endColumn":28},{"ruleId":"171","severity":1,"message":"175","line":20,"column":8,"nodeType":"173","messageId":"174","endLine":20,"endColumn":16},{"ruleId":"171","severity":1,"message":"176","line":25,"column":10,"nodeType":"173","messageId":"174","endLine":25,"endColumn":25},{"ruleId":"171","severity":1,"message":"177","line":26,"column":10,"nodeType":"173","messageId":"174","endLine":26,"endColumn":18},{"ruleId":"171","severity":1,"message":"178","line":80,"column":12,"nodeType":"173","messageId":"174","endLine":80,"endColumn":20},{"ruleId":"171","severity":1,"message":"179","line":81,"column":12,"nodeType":"173","messageId":"174","endLine":81,"endColumn":23},{"ruleId":"171","severity":1,"message":"180","line":82,"column":12,"nodeType":"173","messageId":"174","endLine":82,"endColumn":20},{"ruleId":"171","severity":1,"message":"181","line":5,"column":10,"nodeType":"173","messageId":"174","endLine":5,"endColumn":24},{"ruleId":"171","severity":1,"message":"182","line":2,"column":8,"nodeType":"173","messageId":"174","endLine":2,"endColumn":12},{"ruleId":"171","severity":1,"message":"181","line":53,"column":10,"nodeType":"173","messageId":"174","endLine":53,"endColumn":24},{"ruleId":"171","severity":1,"message":"183","line":6,"column":8,"nodeType":"173","messageId":"174","endLine":6,"endColumn":11},{"ruleId":"171","severity":1,"message":"184","line":9,"column":11,"nodeType":"173","messageId":"174","endLine":9,"endColumn":16},{"ruleId":"171","severity":1,"message":"185","line":33,"column":11,"nodeType":"173","messageId":"174","endLine":33,"endColumn":19},{"ruleId":"186","severity":1,"message":"187","line":50,"column":15,"nodeType":"188","endLine":75,"endColumn":6},{"ruleId":"186","severity":1,"message":"189","line":75,"column":8,"nodeType":"190","endLine":75,"endColumn":17,"suggestions":"191"},{"ruleId":"171","severity":1,"message":"192","line":7,"column":8,"nodeType":"173","messageId":"174","endLine":7,"endColumn":16},{"ruleId":"171","severity":1,"message":"193","line":11,"column":8,"nodeType":"173","messageId":"174","endLine":11,"endColumn":14},{"ruleId":"171","severity":1,"message":"181","line":5,"column":10,"nodeType":"173","messageId":"174","endLine":5,"endColumn":24},{"ruleId":"171","severity":1,"message":"194","line":5,"column":8,"nodeType":"173","messageId":"174","endLine":5,"endColumn":13},"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'UserInfo' is defined but never used.","'useSearchParams' is defined but never used.","'useState' is defined but never used.","'lastTime' is assigned a value but never used.","'lastEmotion' is assigned a value but never used.","'lastText' is assigned a value but never used.","'preventDefault' is defined but never used.","'Link' is defined but never used.","'Box' is defined but never used.","'theme' is assigned a value but never used.","'userTels' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'userSerials' and 'userType'. Either include them or remove the dependency array.","ArrayExpression",["195"],"'Checkbox' is defined but never used.","'Switch' is defined but never used.","'Title' is defined but never used.",{"desc":"196","fix":"197"},"Update the dependencies array to be: [userIdx, userSerials, userType]",{"range":"198","text":"199"},[2481,2490],"[userIdx, userSerials, userType]"]