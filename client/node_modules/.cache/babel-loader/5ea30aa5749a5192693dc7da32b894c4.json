{"ast":null,"code":"/**\n * This function create an object from keys, value and then assign to target\n *\n * @param {Object} obj : the target object to be assigned\n * @param {string[]} keys\n * @param {string | number} value\n *\n * @example\n * const source = {}\n * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }\n *\n * @example\n * const source = { palette: { primary: 'var(--palette-primary)' } }\n * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }\n */\nexport const assignNestedKeys = (obj, keys, value) => {\n  let temp = obj;\n  keys.forEach((k, index) => {\n    if (index === keys.length - 1) {\n      if (temp && typeof temp === 'object') {\n        temp[k] = value;\n      }\n    } else if (temp && typeof temp === 'object') {\n      if (!temp[k]) {\n        temp[k] = {};\n      }\n\n      temp = temp[k];\n    }\n  });\n};\n/**\n *\n * @param {Object} obj : source object\n * @param {Function} callback : a function that will be called when\n *                   - the deepest key in source object is reached\n *                   - the value of the deepest key is NOT `undefined` | `null`\n *\n * @example\n * walkObjectDeep({ palette: { primary: { main: '#000000' } } }, console.log)\n * // ['palette', 'primary', 'main'] '#000000'\n */\n\nexport const walkObjectDeep = (obj, callback, shouldSkipPaths) => {\n  function recurse(object) {\n    let parentKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    Object.entries(object).forEach(_ref => {\n      let [key, value] = _ref;\n\n      if (!shouldSkipPaths || shouldSkipPaths && !shouldSkipPaths([...parentKeys, key])) {\n        if (value !== undefined && value !== null) {\n          if (typeof value === 'object' && Object.keys(value).length > 0) {\n            recurse(value, [...parentKeys, key]);\n          } else {\n            callback([...parentKeys, key], value, object);\n          }\n        }\n      }\n    });\n  }\n\n  recurse(obj);\n};\n\nconst getCssValue = (keys, value) => {\n  if (typeof value === 'number') {\n    if (['lineHeight', 'fontWeight', 'opacity', 'zIndex'].some(prop => keys.includes(prop))) {\n      // CSS property that are unitless\n      return value;\n    }\n\n    const lastKey = keys[keys.length - 1];\n\n    if (lastKey.toLowerCase().indexOf('opacity') >= 0) {\n      // opacity values are unitless\n      return value;\n    }\n\n    return `${value}px`;\n  }\n\n  return value;\n};\n/**\n * a function that parse theme and return { css, vars }\n *\n * @param {Object} theme\n * @param {{\n *  prefix?: string,\n *  basePrefix?: string,\n *  shouldSkipGeneratingVar?: (objectPathKeys: Array<string>, value: string | number) => boolean\n * }} options.\n *  `basePrefix`: defined by design system.\n *  `prefix`: defined by application\n *\n *   the CSS variable value will be adjusted based on the provided `basePrefix` & `prefix` which can be found in `parsedTheme`.\n *\n * @returns {{ css: Object, vars: Object, parsedTheme: typeof theme }} `css` is the stylesheet, `vars` is an object to get css variable (same structure as theme), and `parsedTheme` is the cloned version of theme.\n *\n * @example\n * const { css, vars, parsedTheme } = parser({\n *   fontSize: 12,\n *   lineHeight: 1.2,\n *   palette: { primary: { 500: 'var(--color)' } }\n * }, { prefix: 'foo' })\n *\n * console.log(css) // { '--foo-fontSize': '12px', '--foo-lineHeight': 1.2, '--foo-palette-primary-500': 'var(--foo-color)' }\n * console.log(vars) // { fontSize: '--foo-fontSize', lineHeight: '--foo-lineHeight', palette: { primary: { 500: 'var(--foo-palette-primary-500)' } } }\n * console.log(parsedTheme) // { fontSize: 12, lineHeight: 1.2, palette: { primary: { 500: 'var(--foo-color)' } } }\n */\n\n\nexport default function cssVarsParser(theme, options) {\n  const {\n    prefix,\n    basePrefix = '',\n    shouldSkipGeneratingVar\n  } = options || {};\n  const css = {};\n  const vars = {};\n  const parsedTheme = {};\n  walkObjectDeep(theme, (keys, value) => {\n    if (typeof value === 'string' || typeof value === 'number') {\n      if (typeof value === 'string' && value.match(/var\\(\\s*--/)) {\n        // for CSS variable, apply prefix or remove basePrefix from the variable\n        if (!basePrefix && prefix) {\n          value = value.replace(/var\\(\\s*--/g, `var(--${prefix}-`);\n        } else {\n          value = prefix ? value.replace(new RegExp(`var\\\\(\\\\s*--${basePrefix}`, 'g'), `var(--${prefix}`) // removing spaces\n          : value.replace(new RegExp(`var\\\\(\\\\s*--${basePrefix}-`, 'g'), 'var(--');\n        }\n      }\n\n      if (!shouldSkipGeneratingVar || shouldSkipGeneratingVar && !shouldSkipGeneratingVar(keys, value)) {\n        // only create css & var if `shouldSkipGeneratingVar` return false\n        const cssVar = `--${prefix ? `${prefix}-` : ''}${keys.join('-')}`;\n        Object.assign(css, {\n          [cssVar]: getCssValue(keys, value)\n        });\n        assignNestedKeys(vars, keys, `var(${cssVar})`);\n      }\n    }\n\n    assignNestedKeys(parsedTheme, keys, value);\n  }, keys => keys[0] === 'vars' // skip 'vars/*' paths\n  );\n  return {\n    css,\n    vars,\n    parsedTheme\n  };\n}","map":{"version":3,"names":["assignNestedKeys","obj","keys","value","temp","forEach","k","index","length","walkObjectDeep","callback","shouldSkipPaths","recurse","object","parentKeys","Object","entries","key","undefined","getCssValue","some","prop","includes","lastKey","toLowerCase","indexOf","cssVarsParser","theme","options","prefix","basePrefix","shouldSkipGeneratingVar","css","vars","parsedTheme","match","replace","RegExp","cssVar","join","assign"],"sources":["C:/Users/82109/캡스톤/server_heroku/capstone_git/capstone-2022-12/client/node_modules/@mui/system/esm/cssVars/cssVarsParser.js"],"sourcesContent":["/**\n * This function create an object from keys, value and then assign to target\n *\n * @param {Object} obj : the target object to be assigned\n * @param {string[]} keys\n * @param {string | number} value\n *\n * @example\n * const source = {}\n * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }\n *\n * @example\n * const source = { palette: { primary: 'var(--palette-primary)' } }\n * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }\n */\nexport const assignNestedKeys = (obj, keys, value) => {\n  let temp = obj;\n  keys.forEach((k, index) => {\n    if (index === keys.length - 1) {\n      if (temp && typeof temp === 'object') {\n        temp[k] = value;\n      }\n    } else if (temp && typeof temp === 'object') {\n      if (!temp[k]) {\n        temp[k] = {};\n      }\n\n      temp = temp[k];\n    }\n  });\n};\n/**\n *\n * @param {Object} obj : source object\n * @param {Function} callback : a function that will be called when\n *                   - the deepest key in source object is reached\n *                   - the value of the deepest key is NOT `undefined` | `null`\n *\n * @example\n * walkObjectDeep({ palette: { primary: { main: '#000000' } } }, console.log)\n * // ['palette', 'primary', 'main'] '#000000'\n */\n\nexport const walkObjectDeep = (obj, callback, shouldSkipPaths) => {\n  function recurse(object, parentKeys = []) {\n    Object.entries(object).forEach(([key, value]) => {\n      if (!shouldSkipPaths || shouldSkipPaths && !shouldSkipPaths([...parentKeys, key])) {\n        if (value !== undefined && value !== null) {\n          if (typeof value === 'object' && Object.keys(value).length > 0) {\n            recurse(value, [...parentKeys, key]);\n          } else {\n            callback([...parentKeys, key], value, object);\n          }\n        }\n      }\n    });\n  }\n\n  recurse(obj);\n};\n\nconst getCssValue = (keys, value) => {\n  if (typeof value === 'number') {\n    if (['lineHeight', 'fontWeight', 'opacity', 'zIndex'].some(prop => keys.includes(prop))) {\n      // CSS property that are unitless\n      return value;\n    }\n\n    const lastKey = keys[keys.length - 1];\n\n    if (lastKey.toLowerCase().indexOf('opacity') >= 0) {\n      // opacity values are unitless\n      return value;\n    }\n\n    return `${value}px`;\n  }\n\n  return value;\n};\n/**\n * a function that parse theme and return { css, vars }\n *\n * @param {Object} theme\n * @param {{\n *  prefix?: string,\n *  basePrefix?: string,\n *  shouldSkipGeneratingVar?: (objectPathKeys: Array<string>, value: string | number) => boolean\n * }} options.\n *  `basePrefix`: defined by design system.\n *  `prefix`: defined by application\n *\n *   the CSS variable value will be adjusted based on the provided `basePrefix` & `prefix` which can be found in `parsedTheme`.\n *\n * @returns {{ css: Object, vars: Object, parsedTheme: typeof theme }} `css` is the stylesheet, `vars` is an object to get css variable (same structure as theme), and `parsedTheme` is the cloned version of theme.\n *\n * @example\n * const { css, vars, parsedTheme } = parser({\n *   fontSize: 12,\n *   lineHeight: 1.2,\n *   palette: { primary: { 500: 'var(--color)' } }\n * }, { prefix: 'foo' })\n *\n * console.log(css) // { '--foo-fontSize': '12px', '--foo-lineHeight': 1.2, '--foo-palette-primary-500': 'var(--foo-color)' }\n * console.log(vars) // { fontSize: '--foo-fontSize', lineHeight: '--foo-lineHeight', palette: { primary: { 500: 'var(--foo-palette-primary-500)' } } }\n * console.log(parsedTheme) // { fontSize: 12, lineHeight: 1.2, palette: { primary: { 500: 'var(--foo-color)' } } }\n */\n\n\nexport default function cssVarsParser(theme, options) {\n  const {\n    prefix,\n    basePrefix = '',\n    shouldSkipGeneratingVar\n  } = options || {};\n  const css = {};\n  const vars = {};\n  const parsedTheme = {};\n  walkObjectDeep(theme, (keys, value) => {\n    if (typeof value === 'string' || typeof value === 'number') {\n      if (typeof value === 'string' && value.match(/var\\(\\s*--/)) {\n        // for CSS variable, apply prefix or remove basePrefix from the variable\n        if (!basePrefix && prefix) {\n          value = value.replace(/var\\(\\s*--/g, `var(--${prefix}-`);\n        } else {\n          value = prefix ? value.replace(new RegExp(`var\\\\(\\\\s*--${basePrefix}`, 'g'), `var(--${prefix}`) // removing spaces\n          : value.replace(new RegExp(`var\\\\(\\\\s*--${basePrefix}-`, 'g'), 'var(--');\n        }\n      }\n\n      if (!shouldSkipGeneratingVar || shouldSkipGeneratingVar && !shouldSkipGeneratingVar(keys, value)) {\n        // only create css & var if `shouldSkipGeneratingVar` return false\n        const cssVar = `--${prefix ? `${prefix}-` : ''}${keys.join('-')}`;\n        Object.assign(css, {\n          [cssVar]: getCssValue(keys, value)\n        });\n        assignNestedKeys(vars, keys, `var(${cssVar})`);\n      }\n    }\n\n    assignNestedKeys(parsedTheme, keys, value);\n  }, keys => keys[0] === 'vars' // skip 'vars/*' paths\n  );\n  return {\n    css,\n    vars,\n    parsedTheme\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}