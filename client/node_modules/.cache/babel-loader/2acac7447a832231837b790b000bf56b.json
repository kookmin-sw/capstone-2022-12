{"ast":null,"code":"import * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var DEFAULT_MODE_STORAGE_KEY = 'mui-mode';\nexport var DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'mui-color-scheme';\nexport var DEFAULT_ATTRIBUTE = 'data-mui-color-scheme';\nexport default function getInitColorSchemeScript(options) {\n  var _ref = options || {},\n      enableSystem = _ref.enableSystem,\n      _ref$defaultLightColo = _ref.defaultLightColorScheme,\n      defaultLightColorScheme = _ref$defaultLightColo === void 0 ? 'light' : _ref$defaultLightColo,\n      _ref$defaultDarkColor = _ref.defaultDarkColorScheme,\n      defaultDarkColorScheme = _ref$defaultDarkColor === void 0 ? 'dark' : _ref$defaultDarkColor,\n      _ref$modeStorageKey = _ref.modeStorageKey,\n      modeStorageKey = _ref$modeStorageKey === void 0 ? DEFAULT_MODE_STORAGE_KEY : _ref$modeStorageKey,\n      _ref$colorSchemeStora = _ref.colorSchemeStorageKey,\n      colorSchemeStorageKey = _ref$colorSchemeStora === void 0 ? DEFAULT_COLOR_SCHEME_STORAGE_KEY : _ref$colorSchemeStora,\n      _ref$attribute = _ref.attribute,\n      attribute = _ref$attribute === void 0 ? DEFAULT_ATTRIBUTE : _ref$attribute;\n\n  return /*#__PURE__*/_jsx(\"script\", {\n    // eslint-disable-next-line react/no-danger\n    dangerouslySetInnerHTML: {\n      __html: \"(function() { try {\\n        var mode = localStorage.getItem('\".concat(modeStorageKey, \"');\\n        var colorScheme = '';\\n        if (mode === 'system' || (!mode && !!\").concat(enableSystem, \")) {\\n          // handle system mode\\n          var mql = window.matchMedia('(prefers-color-scheme: dark)');\\n          if (mql.matches) {\\n            colorScheme = localStorage.getItem('\").concat(colorSchemeStorageKey, \"-dark') || '\").concat(defaultDarkColorScheme, \"';\\n          } else {\\n            colorScheme = localStorage.getItem('\").concat(colorSchemeStorageKey, \"-light') || '\").concat(defaultLightColorScheme, \"';\\n          }\\n        }\\n        if (mode === 'light') {\\n          colorScheme = localStorage.getItem('\").concat(colorSchemeStorageKey, \"-light') || '\").concat(defaultLightColorScheme, \"';\\n        }\\n        if (mode === 'dark') {\\n          colorScheme = localStorage.getItem('\").concat(colorSchemeStorageKey, \"-dark') || '\").concat(defaultDarkColorScheme, \"';\\n        }\\n        if (colorScheme) {\\n          document.documentElement.setAttribute('\").concat(attribute, \"', colorScheme);\\n        }\\n      } catch (e) {} })();\")\n    }\n  });\n}","map":{"version":3,"names":["React","jsx","_jsx","DEFAULT_MODE_STORAGE_KEY","DEFAULT_COLOR_SCHEME_STORAGE_KEY","DEFAULT_ATTRIBUTE","getInitColorSchemeScript","options","enableSystem","defaultLightColorScheme","defaultDarkColorScheme","modeStorageKey","colorSchemeStorageKey","attribute","dangerouslySetInnerHTML","__html"],"sources":["C:/Users/82109/캡스톤/server_heroku/capstone_git/capstone-2022-12/client/node_modules/@mui/system/esm/cssVars/getInitColorSchemeScript.js"],"sourcesContent":["import * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_MODE_STORAGE_KEY = 'mui-mode';\nexport const DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'mui-color-scheme';\nexport const DEFAULT_ATTRIBUTE = 'data-mui-color-scheme';\nexport default function getInitColorSchemeScript(options) {\n  const {\n    enableSystem,\n    defaultLightColorScheme = 'light',\n    defaultDarkColorScheme = 'dark',\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    attribute = DEFAULT_ATTRIBUTE\n  } = options || {};\n  return /*#__PURE__*/_jsx(\"script\", {\n    // eslint-disable-next-line react/no-danger\n    dangerouslySetInnerHTML: {\n      __html: `(function() { try {\n        var mode = localStorage.getItem('${modeStorageKey}');\n        var colorScheme = '';\n        if (mode === 'system' || (!mode && !!${enableSystem})) {\n          // handle system mode\n          var mql = window.matchMedia('(prefers-color-scheme: dark)');\n          if (mql.matches) {\n            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n          } else {\n            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n          }\n        }\n        if (mode === 'light') {\n          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n        }\n        if (mode === 'dark') {\n          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n        }\n        if (colorScheme) {\n          document.documentElement.setAttribute('${attribute}', colorScheme);\n        }\n      } catch (e) {} })();`\n    }\n  });\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,OAAO,IAAMC,wBAAwB,GAAG,UAAjC;AACP,OAAO,IAAMC,gCAAgC,GAAG,kBAAzC;AACP,OAAO,IAAMC,iBAAiB,GAAG,uBAA1B;AACP,eAAe,SAASC,wBAAT,CAAkCC,OAAlC,EAA2C;EACxD,WAOIA,OAAO,IAAI,EAPf;EAAA,IACEC,YADF,QACEA,YADF;EAAA,iCAEEC,uBAFF;EAAA,IAEEA,uBAFF,sCAE4B,OAF5B;EAAA,iCAGEC,sBAHF;EAAA,IAGEA,sBAHF,sCAG2B,MAH3B;EAAA,+BAIEC,cAJF;EAAA,IAIEA,cAJF,oCAImBR,wBAJnB;EAAA,iCAKES,qBALF;EAAA,IAKEA,qBALF,sCAK0BR,gCAL1B;EAAA,0BAMES,SANF;EAAA,IAMEA,SANF,+BAMcR,iBANd;;EAQA,OAAO,aAAaH,IAAI,CAAC,QAAD,EAAW;IACjC;IACAY,uBAAuB,EAAE;MACvBC,MAAM,0EAC+BJ,cAD/B,8FAGmCH,YAHnC,0MAOsCI,qBAPtC,yBAO0EF,sBAP1E,qFASsCE,qBATtC,0BAS2EH,uBAT3E,wHAaoCG,qBAbpC,0BAayEH,uBAbzE,0GAgBoCG,qBAhBpC,yBAgBwEF,sBAhBxE,yGAmBuCG,SAnBvC;IADiB;EAFQ,CAAX,CAAxB;AA2BD"},"metadata":{},"sourceType":"module"}